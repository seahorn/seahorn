language: cpp
cache: apt
env:
  matrix:
   # =======================================================
   # RELEASE Build
   # =======================================================
     - CMAKE_CXX_COMPILER=g++-4.8
       CMAKE_BUILD_TYPE=RELEASE
       CONSERVE_MEMORY=ON

before_install:
   - until sudo add-apt-repository -y ppa:saiarcot895/chromium-beta; do echo retry; done
   - until sudo apt-get -qq update; do echo retry; done
   - until sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test; do echo retry; done
   - sudo apt-add-repository --yes ppa:smspillaz/cmake-2.8.12
   - sudo apt-get --yes update
   - sudo apt-get install --yes cmake cmake-data
   - sudo apt-get install --yes libgmp-dev
   - sudo apt-get install --yes python-pip

install:
  - until sudo apt-get -qq install libboost-all-dev libboost-test-dev libboost-program-options-dev; do echo retry; done
  - wget http://dl.dropboxusercontent.com/u/203889738/gcc/ninja.tar.gz;
    tar xfz ninja.tar.gz;
    cd ninja;
    ./bootstrap.py > /dev/null 2>&1;
    sudo cp -v ninja /usr/bin/;
    cd ..;
  - ninja --version
  - until sudo apt-get -qq update; do echo retry; done
  - until sudo apt-get -qq install libstdc++-4.8-dev; do echo retry; done
  - if [[ $CMAKE_CXX_COMPILER == g++-4.8 ]]; then until sudo apt-get -qq install g++-4.8; do echo retry; done fi
  - wget --no-verbose --output-document=boost-trunk.tar.bz2 http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.bz2/download
  - export BOOST_ROOT="$TRAVIS_BUILD_DIR/../boost-trunk"
  - export CMAKE_MODULE_PATH="$BOOST_ROOT"
  - mkdir -p $BOOST_ROOT
  - tar jxf boost-trunk.tar.bz2 --strip-components=1 -C $BOOST_ROOT
  - (cd $BOOST_ROOT; ./bootstrap.sh --with-libraries=date_time,filesystem,system,iostreams,regex,python,test)
  - (cd $BOOST_ROOT; ./b2 threading=multi --prefix=$BOOST_ROOT -d0 install)
  - cd ..
  - export LZ="$TRAVIS_BUILD_DIR/../lz"
  - mkdir -p $LZ
  - wget --output-document=llvm-z3.tar.gz https://www.dropbox.com/s/cipjz38k3boyd1v/llvm-3.6-z3.tar.gz?dl=1;
  
  - tar xvf llvm-z3.tar.gz -C $LZ;
  - ls $LZ
  - sudo pip install lit
  - sudo pip install OutputCheck

script:
  - cd seahorn
  - ls
  - mkdir -p build
  - cd build
  - mv $LZ/run run
  - ls run/bin
  - GENERATOR=-GNinja;
  - /usr/bin/cmake -DBOOST_ROOT=$BOOST_ROOT -DZ3_ROOT=run -DLLVM_DIR=$(pwd)/run/share/llvm/cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER} -DCMAKE_PROGRAM_PATH=/usr/bin  -DCMAKE_INSTALL_PREFIX=run ../;
  - /usr/bin/cmake --build . --target extra
  - ls ../ 
  - /usr/bin/cmake --build .
  - /usr/bin/cmake --build .
  - /usr/bin/cmake --build . --target install
  - ls run/bin/
  - run/bin/sea -h
  - /usr/bin/cmake --build . --target test-simple
  - /usr/bin/cmake --build . --target pred-abs


notifications:
  slack: seahornteam:NAUqZmZHFFviPH4ktQbJXgKu
  email:
    recipients:
     - seahorn-build@googlegroups.com
    on_success: always
    on_failure: always
