# -*- Python -*-

import os
import sys
import re
import platform
import lit.util
import lit.formats

config.name = 'Seahorn'
config.test_format = lit.formats.ShTest(execute_external=False)
config.suffixes = ['.c', '.cpp', '.ll']
config.excludes = []
                  
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = lit_config.params.get('test_dir', '.')
config.useProgressBar= True
config.showOutput= True
config.timeout=30
config.max_time=30

repositoryRoot = os.path.dirname (os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def addEnv(name):
   if name in os.environ:
      config.environment[name] = os.environ[name]

def isexec (fpath):
    if fpath == None: return False
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

def which (cmd):
   return lit.util.which(cmd, config.environment['PATH'])
def getSea ():
   seahorn = None
   if 'SEAHORN' in os.environ:
      seahorn = os.environ ['SEAHORN']
   if seahorn is None or not isexec(seahorn):
      seahorn = which('sea')
   return seahorn
def getSeaInspect ():
   return which('seainspect')

addEnv('HOME')
addEnv('PWD')
addEnv('C_INCLUDE_PATH')


lit_config.note('Repository root is {}'.format(repositoryRoot))

sea_cmd = getSea()
if not isexec(sea_cmd):
   lit_config.fatal('Could not find the Seahorn executable')

seainspect_cmd = getSeaInspect()
if not isexec(seainspect_cmd):
   lit_config.fatal('Could not find the seainspect executable')


cmp_graphs = os.path.join(repositoryRoot,'test','dsa','check_graphs.py')
if not isexec (cmp_graphs):
   lit_config.fatal('Could not find the script ' + str(cmp_graphs))
   
config.substitutions.append(('%sea', sea_cmd))
config.substitutions.append(('%seainspect', seainspect_cmd))
config.substitutions.append(('%cmp-graphs', cmp_graphs))
config.substitutions.append(('%tests', os.path.join(repositoryRoot,'test','dsa','expected_graphs')))

## dsa options here
config.substitutions.append(('%cs_dsa', "--dsa=sea-cs"))
config.substitutions.append(('%ci_dsa', "--dsa=sea-ci"))


