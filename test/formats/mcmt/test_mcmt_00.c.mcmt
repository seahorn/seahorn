;; SeaHorn v.0.1.0-rc3
(define-state-type st_ty
  ((s0 Int) (s1 Int) (s2 Int) )
  ((main@%_7_0 Bool) (main@%_5_0 Int) (main@%_6_0 Bool) (main@%.lcssa8_1 Int) (main@%.lcssa_1 Int) (main@%.0.i2_2 Int) (main@%.01.i1_2 Int) (main@%_0_0 Int) (main@%_1_0 Bool) (main@%.0.i2_0 Int) (main@%.01.i1_0 Int) (main@entry_0 Bool) (main@.lr.ph_0 Bool) (main@_bb_0 Bool) (main@%.0.i2_1 Int) (main@%.01.i1_1 Int) (main@verifier.error_0 Bool) (main@%.01.i.lcssa_0 Int) (main@%.0.i.lcssa_0 Int) (main@%.01.i.lcssa_1 Int) (main@%.0.i.lcssa_1 Int) (main@verifier.error.split_0 Bool) (main@%_3_0 Int) (main@%_4_0 Int) (main@_bb_1 Bool) (main@verifier.error.loopexit_0 Bool) (main@%.lcssa8_0 Int) (main@%.lcssa_0 Int) )
)
(define-states init st_ty (= s0 0))
(define-transition main_1_tr_0 st_ty
(and 
  (= state.s0 0) (= state.s1 main@%.0.i2_0) (= state.s2 main@%.01.i1_0) 
  (= next.s0 1) (= next.s1 main@%.0.i2_2) (= next.s2 main@%.01.i1_2) 
  (and (= main@%_1_0 (= main@%_0_0 0))
     (or (not main@.lr.ph_0) (and main@.lr.ph_0 main@entry_0))
     (or (not (and main@.lr.ph_0 main@entry_0)) (not main@%_1_0))
     (or (not main@_bb_0) (and main@_bb_0 main@.lr.ph_0))
     main@_bb_0
     (or (not (and main@_bb_0 main@.lr.ph_0)) (= main@%.0.i2_1 0))
     (or (not (and main@_bb_0 main@.lr.ph_0)) (= main@%.01.i1_1 1))
     (or (not (and main@_bb_0 main@.lr.ph_0)) (= main@%.0.i2_2 main@%.0.i2_1))
     (or (not (and main@_bb_0 main@.lr.ph_0)) (= main@%.01.i1_2 main@%.01.i1_1))))
)
(define-transition main_1_tr_1 st_ty
(and 
  (= state.s0 0) (= state.s1 main@%.0.i2_0) (= state.s2 main@%.01.i1_0) 
  (= next.s0 2) (= next.s1 main@%.0.i2_0) (= next.s2 main@%.01.i1_0) 
  (let ((a!1 (or (not main@verifier.error_0)
               (= main@%_7_0 (not (<= main@%.0.i.lcssa_1 main@%.01.i.lcssa_1))))))
  (and (= main@%_1_0 (= main@%_0_0 0))
       (or (not main@verifier.error_0) (and main@verifier.error_0 main@entry_0))
       (or (not (and main@verifier.error_0 main@entry_0)) main@%_1_0)
       (or (not (and main@verifier.error_0 main@entry_0))
           (= main@%.01.i.lcssa_0 1))
       (or (not (and main@verifier.error_0 main@entry_0))
           (= main@%.0.i.lcssa_0 0))
       (or (not (and main@verifier.error_0 main@entry_0))
           (= main@%.01.i.lcssa_1 main@%.01.i.lcssa_0))
       (or (not (and main@verifier.error_0 main@entry_0))
           (= main@%.0.i.lcssa_1 main@%.0.i.lcssa_0))
       a!1
       (or (not main@verifier.error_0) main@%_7_0)
       (or (not main@verifier.error.split_0)
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
)
(define-transition main_1_tr_2 st_ty
(and 
  (= state.s0 1) (= state.s1 main@%.0.i2_0) (= state.s2 main@%.01.i1_0) 
  (= next.s0 1) (= next.s1 main@%.0.i2_2) (= next.s2 main@%.01.i1_2) 
  (and (= main@%_3_0 (+ main@%.0.i2_0 main@%.01.i1_0))
     (= main@%_4_0 (+ 1 main@%.0.i2_0))
     (= main@%_6_0 (= main@%_5_0 0))
     (or (not main@_bb_1) (and main@_bb_1 main@_bb_0))
     main@_bb_1
     (or (not (and main@_bb_1 main@_bb_0)) (not main@%_6_0))
     (or (not (and main@_bb_1 main@_bb_0)) (= main@%.0.i2_1 main@%_4_0))
     (or (not (and main@_bb_1 main@_bb_0)) (= main@%.01.i1_1 main@%_3_0))
     (or (not (and main@_bb_1 main@_bb_0)) (= main@%.0.i2_2 main@%.0.i2_1))
     (or (not (and main@_bb_1 main@_bb_0)) (= main@%.01.i1_2 main@%.01.i1_1))))
)
(define-transition main_1_tr_3 st_ty
(and 
  (= state.s0 1) (= state.s1 main@%.0.i2_0) (= state.s2 main@%.01.i1_0) 
  (= next.s0 2) (= next.s1 main@%.0.i2_0) (= next.s2 main@%.01.i1_0) 
  (let ((a!1 (or (not main@verifier.error_0)
               (= main@%_7_0 (not (<= main@%.0.i.lcssa_1 main@%.01.i.lcssa_1))))))
  (and (= main@%_3_0 (+ main@%.0.i2_0 main@%.01.i1_0))
       (= main@%_4_0 (+ 1 main@%.0.i2_0))
       (= main@%_6_0 (= main@%_5_0 0))
       (or (not main@verifier.error.loopexit_0)
           (and main@verifier.error.loopexit_0 main@_bb_0))
       (or (not (and main@verifier.error.loopexit_0 main@_bb_0)) main@%_6_0)
       (or (not (and main@verifier.error.loopexit_0 main@_bb_0))
           (= main@%.lcssa8_0 main@%_3_0))
       (or (not (and main@verifier.error.loopexit_0 main@_bb_0))
           (= main@%.lcssa_0 main@%_4_0))
       (or (not (and main@verifier.error.loopexit_0 main@_bb_0))
           (= main@%.lcssa8_1 main@%.lcssa8_0))
       (or (not (and main@verifier.error.loopexit_0 main@_bb_0))
           (= main@%.lcssa_1 main@%.lcssa_0))
       (or (not main@verifier.error_0)
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (or (not (and main@verifier.error_0 main@verifier.error.loopexit_0))
           (= main@%.01.i.lcssa_0 main@%.lcssa8_1))
       (or (not (and main@verifier.error_0 main@verifier.error.loopexit_0))
           (= main@%.0.i.lcssa_0 main@%.lcssa_1))
       (or (not (and main@verifier.error_0 main@verifier.error.loopexit_0))
           (= main@%.01.i.lcssa_1 main@%.01.i.lcssa_0))
       (or (not (and main@verifier.error_0 main@verifier.error.loopexit_0))
           (= main@%.0.i.lcssa_1 main@%.0.i.lcssa_0))
       a!1
       (or (not main@verifier.error_0) main@%_7_0)
       (or (not main@verifier.error.split_0)
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
)
(define-transition-system main_1 st_ty init 
(or main_1_tr_0 main_1_tr_1 main_1_tr_2 main_1_tr_3 ))
(query main_1  (< s0 2))
