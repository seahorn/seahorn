# -*- Python -*-

import os
import sys
import re
import platform

try:
   import lit.util
   import lit.formats
except ImportError:
   pass


config.name = 'Seahorn'
config.test_format = lit.formats.ShTest(execute_external=False)
config.suffixes = ['.c', '.ll']
config.excludes = [
    # sometimes takes too long
    'solve/03_unsat.c'
]

config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = lit_config.params.get('test_dir', '.')

def addEnv(name):
   if name in os.environ:
      config.environment[name] = os.environ[name]

def isexec (fpath):
    if fpath == None: return False
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

def which (cmd):
   return lit.util.which(cmd, config.environment['PATH'])

def getSea ():
   sea = None
   if 'SEAHORN' in os.environ:
      sea = os.environ ['SEAHORN']
   if sea is None or not isexec(sea):
      sea = which('sea')
   return sea

def getSeahorn ():
   return which('seahorn')

addEnv('HOME')
addEnv('PWD')
addEnv('C_INCLUDE_PATH')

repositoryRoot = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
lit_config.note('Repository root is {}'.format(repositoryRoot))

sea_cmd = getSea()
if not isexec(sea_cmd):
   lit_config.fatal('Could not find the sea executable at {}'.format(sea_cmd))
else:
   lit_config.note('Found sea: {}'.format(sea_cmd))
lit_config.note('Found clang: {}'.format(which('clang')))

config.substitutions.append(('%sea', sea_cmd))

seahorn_cmd = getSeahorn()
if not isexec(seahorn_cmd):
   lit_config.fatal('Could not find the seahorn executable at {}'.format(seahorn_cmd))
else:
   lit_config.note('Found seahorn: {}'.format(seahorn_cmd))

config.substitutions.append(('%horn', seahorn_cmd))
