// RUN: %sea bpf -m32 -O0 --horn-bv2=true --horn-gsa=true --bmc=mono --bound=10 \
// RUN:      --horn-stats --keep-shadows=true --inline --log=opsem "%s" 2>&1 | OutputCheck %s

// RUN: %sea bpf -m32 -O0 --horn-bv2=true --horn-gsa=false --bmc=mono --bound=10 \
// RUN:      --horn-stats --keep-shadows=true  --inline --log=opsem "%s" 2>&1 | OutputCheck %s
// CHECK-L: unsat

extern int nd(void);
extern void __VERIFIER_error(void) __attribute__((noreturn));
extern void __VERIFIER_assume(int);
#define assert(X)                                                              \
  if (!(X)) {                                                                  \
    __VERIFIER_error();                                                        \
  }
#define assume __VERIFIER_assume

extern int *freshInt(void);
extern void print(int *);
extern void sea_dsa_alias(int *, int *);

int main() {
  int A, B;
  int *a = &A;
  int *b = &B;

  sea_dsa_alias(a, b);

  *a = 11;
  *b = 12;

  int v = *a;

  assert(v == 11);
  return 0;
}
